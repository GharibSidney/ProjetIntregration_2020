@using ProjetIntegrationEquipe2.ViewModels.Tutores
@model TutoreCreateVM

<h2 class="text-center m-1">Création d'un compte tutoré</h2>

@using (Html.BeginForm("Create", "Tutores", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()


        <div class="form-group groupeInput mb-5">
            @Html.LabelFor(m => m.CheminPhoto, new { @class = "col-md-4 font-weight-bold control-label" })
            <div class="col-md-10 pl-5">
                <img src="@Url.Content("~/upload/Image/default.png")" id="imagePreview" />
                <input type="file" id="ImageFile" name="ImageFile" style="display: none;" accept="image/x-png,image/gif,image/jpeg" onchange="ApercuImage(this, document.getElementById('imagePreview'));" />
                <input type="button" value="Parcourir" onclick="document.getElementById('ImageFile').click();" />
                @Html.ValidationMessageFor(m => m.ImageFile)
                @Html.ValidationMessage("ImageSizeError")

        </div>
    </div>

        <div class="form-group d-flex justify-content-center groupeInput  ">
            @Html.LabelFor(m => m.Prenom, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.Prenom, new { @class = "form-control w-75" })
                @Html.ValidationMessageFor(m => m.Prenom)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.Nom, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.Nom, new { @class = "form-control w-75" })
                @Html.ValidationMessageFor(m => m.Nom)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control w-75 enleverPadding" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput">
            @Html.LabelFor(m => m.ConfirmEmail, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.ConfirmEmail, new { @class = "form-control w-75 enleverPadding", oncopy = "return false", onpaste = "return false" })
                @Html.ValidationMessageFor(m => m.ConfirmEmail)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.Telephone, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.Telephone, new { @class = "form-control w-75" ,@id = "Telephone"})
                @Html.ValidationMessageFor(m => m.Telephone)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.Interet, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.Interet, new { @class = "form-control w-75" })
                @Html.ValidationMessageFor(m => m.Interet)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.Force, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.TextBoxFor(m => m.Force, new { @class = "form-control w-75" })
                @Html.ValidationMessageFor(m => m.Force)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control w-75", oncopy = "return false"})
                <p class="textePlusPetit">*Doit contenir une majuscule, une minuscule, un caractère spéciale et un chiffre.</p>
                @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>

        <div class="form-group d-flex justify-content-center groupeInput ">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label font-weight-bold enleverPadding" })
            <div class="col-md-10 pl-5">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control w-75", oncopy = "return false", onpaste = "return false", Textmode = "Password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
        </div>

    <div class="text-center p-2"> <button type="submit" class="btn btn-primary">Soumettre</button></div>

}


@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/MasqueTelephone.js"></script>
    <script src="~/Scripts/Scripts.js"></script>


}